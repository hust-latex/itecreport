% \iffalse meta-comment
% !TEX program  = LuaLaTeX
%
% itecreport.dtx
%
% Copyright (C) 2013 by Xu Cheng <xucheng@me.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Xu Cheng.
%
% This work consists of the files itecreport.dtx and itecreport.ins
% and the derived file itecreport-zh.cls, itecreport-en.cls and 
% along with its documnet and example files.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{itecreport.dtx}
%</driver>
%
%<class>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<class-zh>\ProvidesClass{itecreport-zh}
%<class-en>\ProvidesClass{itecreport-en}
%<*class>
[2013/06/01 v1.0 A Report Template for Internet Technology and Engineering R&D Center of HUST]
%</class>
%
%<*driver>
\documentclass[12pt,a4paper,numbered,full]{l3doc}

\usepackage{fontspec}
\setmainfont[Ligatures={Common,TeX}]{Tex Gyre Pagella}
\setsansfont[Ligatures={Common,TeX}]{Droid Sans}
\setmonofont{CMU Typewriter Text}
\defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}

\usepackage{luatexja-fontspec}
\setmainjfont[BoldFont={AdobeHeitiStd-Regular},ItalicFont={AdobeKaitiStd-Regular}]{AdobeSongStd-Light}
\setsansjfont{AdobeKaitiStd-Regular}
\defaultjfontfeatures{JFM=kaiming}
\newjfontfamily\KAI{AdobeKaitiStd-Regular}
\newjfontfamily\FANGSONG{AdobeFangsongStd-Regular}

\usepackage{interfaces-LaTeX}
\changefont{linespread=1.2}

\usepackage[top=1.2in,bottom=1.2in,left=1.5in,right=1in]{geometry}
\pdfpagewidth=\paperwidth
\pdfpageheight=\paperheight

\usepackage{color}
\usepackage[table]{xcolor}

\definecolor{hyperreflinkred}{RGB}{128,23,31}
\hypersetup{
  unicode,
  bookmarksnumbered=true,
  bookmarksopen=true,
  bookmarksopenlevel=2,
  breaklinks=true,
  colorlinks=true,
  allcolors=hyperreflinkred,
  linktoc=page,
  plainpages=false,
  pdfpagelabels=true,
  pdfstartview={XYZ null null 1}
}

\usepackage{indentfirst}
\setlength{\parindent}{2em}

\usepackage{titlesec,titletoc}
\usepackage[titles]{tocloft}
\setcounter{tocdepth}{2}
\setcounter{secnumdepth}{3}

\usepackage{enumitem}
\setlist{noitemsep,partopsep=0pt,topsep=.8ex}
\setlist[1]{labelindent=\parindent}
\setlist[enumerate,1]{label=\arabic*.}
\setlist[enumerate,2]{label*=\arabic*}
\setlist[enumerate,3]{label=\emph{\alph*})}

\AtBeginEnvironment{verbatim}{\small}
\let\AltMacroFont\MacroFont

\usepackage{metalogo}
\usepackage{notes}
\usepackage{tabularx}

\renewcommand{\cftsecleader}{\cftdotfill{\cftdotsep}}
\makeatletter
\newskip\ITEC@oldcftbeforepartskip
\ITEC@oldcftbeforepartskip=\cftbeforepartskip
\newskip\ITEC@oldcftbeforesecskip
\ITEC@oldcftbeforesecskip=\cftbeforesecskip
\let\ITEC@oldl@part\l@part
\let\ITEC@oldl@section\l@section
\let\ITEC@oldl@subsection\l@subsection
\def\l@part#1#2{\ITEC@oldl@part{#1}{#2}\cftbeforepartskip=3pt}
\def\l@section#1#2{\ITEC@oldl@section{#1}{#2}\cftbeforepartskip=\ITEC@oldcftbeforepartskip\cftbeforesecskip=3pt}
\def\l@subsection#1#2{\ITEC@oldl@subsection{#1}{#2}\cftbeforesecskip=\ITEC@oldcftbeforesecskipt}
\makeatother

\titleformat{\part}
  {
    \bfseries           
    \centering               
    \changefont{size=18pt}  
  }
  {\thepart}
  {1em}
  {}
\let\oldpart\part
\def\part#1{\newpage\oldpart{#1}}

\def\orvar{\textnormal{|}}

\IndexPrologue
 {
  \part{Index}
  The~italic~numbers~denote~the~pages~where~the~
  corresponding~entry~is~described,~
  numbers~underlined~point~to~the~definition,~
  all~others~indicate~the~places~where~it~is~used.
 }

\EnableCrossrefs
\CodelineIndex
\RecordChanges

\begin{document}
\DocInput{itecreport.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \iffalse
%<*!(readme|example-bib|example-eps)>
% \fi
%% \CharacterTable
%% {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%  Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%  Digits        \0\1\2\3\4\5\6\7\8\9
%%  Exclamation   \!     Double quote  \"     Hash (number) \#
%%  Dollar        \$     Percent       \%     Ampersand     \&
%%  Acute accent  \'     Left paren    \(     Right paren   \)
%%  Asterisk      \*     Plus          \+     Comma         \,
%%  Minus         \-     Point         \.     Solidus       \/
%%  Colon         \:     Semicolon     \;     Less than     \<
%%  Equals        \=     Greater than  \>     Question mark \?
%%  Commercial at \@     Left bracket  \[     Backslash     \\
%%  Right bracket \]     Circumflex    \^     Underscore    \_
%%  Grave accent  \`     Left brace    \{     Vertical bar  \|
%%  Right brace   \}     Tilde         \~}
% \iffalse
%</!(readme|example-bib|example-eps)>
% \fi
%
% \changes{v1.0}{2013/06/01}{Initial version}
%
% \GetFileInfo{itecreport.dtx}
%
% \DoNotIndex{}
%
% \title{A Report Template for Internet Technology and Engineering R\&D Center of HUST: the \textsf{itecreport-zh} and \textsf{itecreport-en} class
% \thanks{This document corresponds to \textsf{itecreport-zh.cls} and \textsf{itecreport-en.cls} ~\fileversion, dated \filedate.}}
% \author{Xu Cheng \\ \texttt{xucheng@me.com}}
% \date{2013/06/01}
%
% \maketitle
% \tableofcontents
%
% \part{Introduction}
%
% \section{Introduction}
% This is a report template for \href{http://itec.hust.edu.cn/}{Internet Technology and Engineering R\&D Center of HUST}. This template is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
%
% The whole project is published under LPPL v1.3 License at \href{https://github.com/michael911009/itecreport}{GitHub}.
%
% This template provides two class files which correspond to Chinese version and English version template separately: \textsf{itecreport-zh} and \textsf{itecreport-en}.
%
% \section{Installation}
%
% \part{中文模板使用方法}
%
% \part{Usage of English Version Template}
%
%
% \StopEventually{
%  \begingroup
%  \hypersetup{bookmarksopenlevel=0}
%  \PrintIndex
%  \endgroup
% }
%
% \part{Implementation}
%
%    \begin{macrocode}
%<*class>
\RequirePackage{ifthen}
%    \end{macrocode}
%
% Process options and load class book.
%    \begin{macrocode}
\RequirePackage{xkeyval}
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{book}}
\ProcessOptionsX
\LoadClass[12pt, a4paper, openany]{book}
%    \end{macrocode}
%
% Check engine, only \XeLaTeX and \LuaLaTeX are supported.
%    \begin{macrocode}
\RequirePackage{iftex}
\ifXeTeX\else
  \ifLuaTeX\else
    \begingroup
      \errorcontextlines=-1\relax
      \newlinechar=10\relax
      \errmessage{^^J
      *******************************************************^^J
      * XeTeX or LuaTeX is required to compile this document.^^J
      * Sorry!^^J
      *******************************************************^^J
      }%
    \endgroup
  \fi
\fi
%    \end{macrocode}
%
% Set font used in document. Firstly, it's font setting for English version template (\textsf{itecreport-en}). We use \href{http://mirrors.ctan.org/help/Catalogue/entries/fontspec}{\texttt{fontspec}} package to handle font. We choose \textsf{Tex Gyre Termes}, \textsf{Droid Sans} and \textsf{CMU Typewriter Text} as document main font, sans font and mono font.
%    \begin{macrocode}
%<*class-en>
\RequirePackage{fontspec}
\setmainfont[
  Ligatures={Common,TeX},
  Extension=.otf,
  UprightFont=*-regular,
  BoldFont=*-bold,
  ItalicFont=*-italic,
  BoldItalicFont=*-bolditalic]{texgyretermes}
\setsansfont[Ligatures={Common,TeX}]{Droid Sans}
\setmonofont{CMU Typewriter Text}
\defaultfontfeatures{Mapping=tex-text}
%</class-en>
%    \end{macrocode}
%
% Below is the font setting for Chinese version template (\textsf{itecreport-zh}). The Chinese version template chooses the same English font as English version. We use  \href{http://mirrors.ctan.org/help/Catalogue/entries/xecjk}{\texttt{xecjk}} package (for \XeLaTeX) or \href{http://mirrors.ctan.org/help/Catalogue/entries/luatexja}{\texttt{luatex-ja}} package (for \LuaLaTeX, recommend) to handle Chinese font. We will use font: \textsf{AdobeSongStd-Light}, \textsf{AdobeKaitiStd-Regular}, \textsf{AdobeHeitiStd-Regular} and \textsf{AdobeFangsongStd-Regular}.
%    \begin{macrocode}
%<*class-zh>
\ifXeTeX  % XeTeX下使用fontspec + xeCJK处理字体
  % 英文字体
  \RequirePackage{fontspec}
  \RequirePackage{xunicode}
  \setmainfont[
    Ligatures={Common,TeX},
    Extension=.otf,
    UprightFont=*-regular,
    BoldFont=*-bold,
    ItalicFont=*-italic,
    BoldItalicFont=*-bolditalic]{texgyretermes}
  \setsansfont[Ligatures={Common,TeX}]{Droid Sans}
  \setmonofont{CMU Typewriter Text}
  \defaultfontfeatures{Mapping=tex-text}
  % 中文字体
  \RequirePackage[CJKmath]{xeCJK}
  \setCJKmainfont[
   BoldFont={Adobe Heiti Std},
   ItalicFont={Adobe Kaiti Std}]{Adobe Song Std}
  \setCJKsansfont{Adobe Kaiti Std}
  \setCJKmonofont{Adobe Fangsong Std}
  \xeCJKsetup{PunctStyle=kaiming}

  \newCJKfontfamily\HEI{Adobe Heiti Std}
  \newCJKfontfamily\KAI{Adobe Kaiti Std}
  \newCJKfontfamily\FANGSONG{Adobe Fangsong Std}
  \newcommand{\hei}[1]{{\HEI #1}}
  \newcommand{\kai}[1]{{\KAI #1}}
  \newcommand{\fangsong}[1]{{\FANGSONG #1}}
\else\fi

\ifLuaTeX  % LuaTeX下使用luatex-ja处理字体 [推荐]
  \RequirePackage{luatexja-fontspec}
  % 英文字体
  \setmainfont[Ligatures={Common,TeX}]{Tex Gyre Termes}
  \setsansfont[Ligatures={Common,TeX}]{Droid Sans}
  \setmonofont{CMU Typewriter Text}
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  % 中文字体
  \setmainjfont[
   BoldFont={AdobeHeitiStd-Regular},
   ItalicFont={AdobeKaitiStd-Regular}]{AdobeSongStd-Light}
  \setsansjfont{AdobeKaitiStd-Regular}
  \defaultjfontfeatures{JFM=kaiming}

  \newjfontfamily\HEI{AdobeHeitiStd-Regular}
  \newjfontfamily\KAI{AdobeKaitiStd-Regular}
  \newjfontfamily\FANGSONG{AdobeFangsongStd-Regular}
  \newcommand{\hei}[1]{{\jfontspec{AdobeHeitiStd-Regular} #1}}
  \newcommand{\kai}[1]{{\jfontspec{AdobeKaitiStd-Regular} #1}}
  \newcommand{\fangsong}[1]{{\jfontspec{AdobeFangsongStd-Regular} #1}}
\else\fi
%    \end{macrocode}
%
% Chinese number for \textsf{itecreport-zh} using \href{http://mirrors.ctan.org/help/Catalogue/entries/zhnumber}{\texttt{zhnumber}}.
%    \begin{macrocode}
\RequirePackage{zhnumber}
\def\CJKnumber#1{\zhnumber{#1}} % 兼容CJKnumb
%</class-zh>
%    \end{macrocode}
%
% Use \href{http://mirrors.ctan.org/help/Catalogue/entries/interfaces}{\texttt{interfaces}} package to handle font size and line spread. We set global line spread to 1.2.
%    \begin{macrocode}
\RequirePackage{interfaces-LaTeX}
\changefont{linespread=1.2}
%    \end{macrocode}
%
% Use \href{http://mirrors.ctan.org/help/Catalogue/entries/geometry}{\texttt{geometry}} package to handle paper page.
%    \begin{macrocode}
\RequirePackage{geometry}
\geometry{
  a4paper,
  top=1.2in,
  bottom=1.2in,
  left=1in,
  right=1in,
  includefoot
}
\pdfpagewidth=\paperwidth
\pdfpageheight=\paperheight
%    \end{macrocode}
%
% Indent of paragraph and skip between paragraphs.
%    \begin{macrocode}
\RequirePackage{indentfirst}
\setlength{\parindent}{2em}
\setlength{\parskip}{0pt plus 2pt minus 1pt} 
%    \end{macrocode}
%
% Packages to handle color.
%    \begin{macrocode}
\RequirePackage{color}
\RequirePackage[table]{xcolor}
%    \end{macrocode}
%
% Use \href{http://mirrors.ctan.org/help/Catalogue/entries/hyperref}{\texttt{hyperref}} package to generate cross-reference link.
%    \begin{macrocode}
\RequirePackage[unicode]{hyperref}
\definecolor{ITEC@hyperreflinkred}{RGB}{128,23,31}
\hypersetup{
  bookmarksnumbered=true,
  bookmarksopen=true,
  bookmarksopenlevel=1,
  breaklinks=true,
  colorlinks=true,
  allcolors=ITEC@hyperreflinkred,
  linktoc=page,
  plainpages=false,
  pdfpagelabels=true,
  pdfstartview={XYZ null null 1},
  pdfinfo={Template.Info={ITECthesis.cls 2013/06/01, Copyright (C) 2013 by Xu Cheng, https://github.com/michael911009/ITECThesis}}
}
%    \end{macrocode}
%
% Load other packages.
%    \begin{macrocode}
%% packages for math
\RequirePackage{amsmath,amssymb,amsfonts}
\RequirePackage[amsmath,amsthm,thmmarks,hyperref,thref]{ntheorem}
\RequirePackage{fancynum}
\setfnumgsym{\,}
\RequirePackage[lined,boxed,linesnumbered,ruled,vlined]{algorithm2e}
%% packages for picture
\RequirePackage[all]{xy}
\RequirePackage{overpic}
\RequirePackage{graphicx,caption,subcaption}
%% packages for table
\RequirePackage{array}
\RequirePackage{multirow,tabularx,ltxtable}
%% package for code highlight
%% if you need more features, use minted.
\RequirePackage{listings}
%% package for bibliography cite style
\RequirePackage[numbers,square,comma,sort&compress]{natbib}
%% packages for other format
\RequirePackage{titlesec}
\RequirePackage{titletoc}
\RequirePackage{tocvsec2}
\RequirePackage[inline]{enumitem}
\RequirePackage{fancyhdr}
\RequirePackage{afterpage}
\RequirePackage{datenumber}
\RequirePackage{etoolbox}
\RequirePackage{appendix}
\RequirePackage[titles]{tocloft}
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</class>
%    \end{macrocode}
%
% \Finale
%
% ^^A Other file
% \iffalse
%
%<*example-zh>
\documentclass{itecreport-zh}
\begin{document}
\end{document}
%</example-zh>
%
%<*example-en>
\documentclass{itecreport-en}
\begin{document}
\end{document}
%</example-en>
%
%<*example-bib>
@BOOK{TEXGURU99,
  AUTHOR        = "{\TeX}Guru",
  TITLE         = "{\LaTeXe} Manual",
  YEAR          = "1999"
}

@BOOK{knuth,
  AUTHOR        = "{Donald E. Knuth}",
  TITLE         = "The \TeX{}book",
  publisher     = "Addison–Wesley Pub. Co.",
  address       = "MA",
  YEAR          = "1984"
}
%</example-bib>
%
%<*example-eps>
%<<EPSFILE
%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 68 103
%%HiResBoundingBox: 0 0 67.453 102.886
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 67.453 102.886 re
W
q
[1 0 0 1 5.38 5.38] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
0.79701 w
0 0 m
0 48.7234 l
0 53.12527 2.24 59.49364 5.00327 62.94771 c
23.34352 85.87302 l
26.1068 89.32709 30.5868 89.32709 33.35008 85.87302 c
51.69034 62.94771 l
54.4536 59.49364 56.69362 53.12527 56.69362 48.7234 c
56.69362 7.97021 l
56.69362 3.56833 54.17036 2.5232 51.0577 5.63579 c
5.63591 51.05782 l
2.52325 54.17043 3.56833 56.69362 7.97021 56.69362 c
48.7234 56.69362 l
53.12527 56.69362 54.17036 54.17043 51.0577 51.05782 c
5.63591 5.63579 l
2.52325 2.5232 3.56833 0 7.97021 0 c
56.69362 0 l
S
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
%EPSFILE
%</example-eps>
%
%<*readme>
%<<READMEFILE
itecreport
==========

A Report Template for [Internet Technology and Engineering R&D Center of HUST](http://itec.hust.edu.cn/). This template is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
%READMEFILE
%<\readme>
%
% \fi
%
\endinput
